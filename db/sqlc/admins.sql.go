// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: admins.sql

package db

import (
	"context"
	"database/sql"
)

const deleteAdmin = `-- name: DeleteAdmin :exec
DELETE FROM admins
WHERE admin_id = $1
`

func (q *Queries) DeleteAdmin(ctx context.Context, adminID int64) error {
	_, err := q.db.ExecContext(ctx, deleteAdmin, adminID)
	return err
}

const getAdmin = `-- name: GetAdmin :one
SELECT admin_id, user_name, created_at FROM admins
WHERE admin_id = $1
`

func (q *Queries) GetAdmin(ctx context.Context, adminID int64) (Admin, error) {
	row := q.db.QueryRowContext(ctx, getAdmin, adminID)
	var i Admin
	err := row.Scan(&i.AdminID, &i.UserName, &i.CreatedAt)
	return i, err
}

const updateAdmin = `-- name: UpdateAdmin :one
UPDATE admins
SET user_name = $2
WHERE admin_id = $1
RETURNING admin_id, user_name, created_at
`

type UpdateAdminParams struct {
	AdminID  int64          `json:"admin_id"`
	UserName sql.NullString `json:"user_name"`
}

func (q *Queries) UpdateAdmin(ctx context.Context, arg UpdateAdminParams) (Admin, error) {
	row := q.db.QueryRowContext(ctx, updateAdmin, arg.AdminID, arg.UserName)
	var i Admin
	err := row.Scan(&i.AdminID, &i.UserName, &i.CreatedAt)
	return i, err
}
